   Link: canonical
   Cockroach Labs
   Products
   Products CockroachDB CockroachCloud Compare Products Pricing
   Capabilities SQL Scale Resilience Geo-Partitioning Cloud Native
   Customers
   Learn
   Docs University
   Resources
   Guides Videos & Webinars Partners Forum
   Blog Get CockroachDB Contact Us
   Cockroach Labs
   Products
   Products CockroachDB CockroachCloud Compare Products Pricing
   Capabilities SQL Scale Resilience Geo-Partitioning Cloud Native
   Customers
   Learn
   Docs University
   Resources
   Guides Videos & Webinars Partners Forum
   Blog Get CockroachDB Contact Us

                                  CREATE VIEW

   Contribute 
     * Edit This Page
     * Report Doc Issue
     * Suggest New Content

   The CREATE VIEW statement creates a new view, which is a stored query
   represented as a virtual table.

   Note:

   This statement performs a schema change. For more information about how
   online schema changes work in CockroachDB, see Online Schema Changes.

Required privileges

   The user must have the CREATE privilege on the parent database and the
   SELECT privilege on any table(s) referenced by the view.

Synopsis

   CREATE opt_temp VIEW IF NOT EXISTS view_name ( name_list ) AS select_stmt

Parameters

   Parameter      Description                                                 
                  Create a new view only if a view of the same name does not  
                  already exist. If one does exist, do not return an error.   
   IF NOT EXISTS                                                              
                  Note that IF NOT EXISTS checks the view name only. It does  
                  not check if an existing view has the same columns as the   
                  new view.                                                   
                  The name of the view to create, which must be unique within 
   view_name      its database and follow these identifier rules. When the    
                  parent database is not set as the default, the name must be 
                  formatted as database.name.                                 
                  An optional, comma-separated list of column names for the   
   name_list      view. If specified, these names will be used in the         
                  response instead of the columns specified in AS             
                  select_stmt.                                                
                  The selection query to execute when the view is requested.  
                                                                              
   AS select_stmt Note that it is not currently possible to use * to select   
                  all columns from a referenced table or view; instead, you   
                  must specify specific columns.                              
                  Defines the view as a session-scoped temporary view. For    
   opt_temp       more information, see Temporary Views.                      
                                                                              
                  Support for temporary views is experimental.                

Example

   Tip:

   This example highlights one key benefit to using views: simplifying
   complex queries. For additional benefits and examples, see Views.

   Let's say you're using our sample startrek database, which contains two
   tables, episodes and quotes. There's a foreign key constraint between the
   episodes.id column and the quotes.episode column. To count the number of
   famous quotes per season, you could run the following join:

   copy

 > SELECT startrek.episodes.season, count(*)
   FROM startrek.quotes
   JOIN startrek.episodes
   ON startrek.quotes.episode = startrek.episodes.id
   GROUP BY startrek.episodes.season;

   season | count
 ---------+--------
        1 |    78
        2 |    76
        3 |    46
 (3 rows)

   Alternatively, to make it much easier to run this complex query, you could
   create a view:

   copy

 > CREATE VIEW startrek.quotes_per_season (season, quotes)
   AS SELECT startrek.episodes.season, count(*)
   FROM startrek.quotes
   JOIN startrek.episodes
   ON startrek.quotes.episode = startrek.episodes.id
   GROUP BY startrek.episodes.season;

 CREATE VIEW

   The view is then represented as a virtual table alongside other tables in
   the database:

   copy

 > SHOW TABLES FROM startrek;

      table_name
 ---------------------
   episodes
   quotes
   quotes_per_season
 (3 rows)

   Executing the query is as easy as SELECTing from the view, as you would
   from a standard table:

   copy

 > SELECT * FROM startrek.quotes_per_season;

   season | quotes
 ---------+---------
        1 |     78
        2 |     76
        3 |     46
 (3 rows)

See also

     * Selection Queries
     * Views
     * SHOW CREATE
     * ALTER VIEW
     * DROP VIEW
     * Online Schema Changes

   Was this page helpful?

   Yes No
     * Product
          * CockroachDB
          * CockroachCloud
          * Compare
          * Pricing
          * What's New
          * Get CockroachDB
          * Sign In
     * Resources
          * Guides
          * Videos & Webinars
          * Architecture Overview
          * FAQ
          * Security
     * Learn
          * Docs
          * University
     * Support Channels
          * Forum
          * Slack
          * Support Portal
          * Contact Us
     * Company
          * About
          * Blog
          * Careers
          * Customers
          * Events
          * News
          * Privacy
   Â© 2020 Cockroach Labs
   Thank you for downloading CockroachDB
   Keep up-to-date with CockroachDB software releases and usage best
   practices
   Keep up-to-date with CockroachDB software releases and usage best
   practices

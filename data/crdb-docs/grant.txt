   Link: canonical
   Cockroach Labs
   Products
   Products CockroachDB CockroachCloud Compare Products Pricing
   Capabilities SQL Scale Resilience Geo-Partitioning Cloud Native
   Customers
   Learn
   Docs University
   Resources
   Guides Videos & Webinars Partners Forum
   Blog Get CockroachDB Contact Us
   Cockroach Labs
   Products
   Products CockroachDB CockroachCloud Compare Products Pricing
   Capabilities SQL Scale Resilience Geo-Partitioning Cloud Native
   Customers
   Learn
   Docs University
   Resources
   Guides Videos & Webinars Partners Forum
   Blog Get CockroachDB Contact Us

                               GRANT <privileges>

   Contribute 
     * Edit This Page
     * Report Doc Issue
     * Suggest New Content

   The GRANT <privileges> statement lets you control each role or user's SQL
   privileges for interacting with specific databases and tables.

   For privileges required by specific statements, see the documentation for
   the respective SQL statement.

Synopsis

   GRANT ALL CREATE GRANT SELECT DROP INSERT DELETE UPDATE , ON TABLE
   table_name , DATABASE database_name , TO user_name ,

Required privileges

   The user granting privileges must also have the privilege being granted on
   the target database or tables. For example, a user granting the SELECT
   privilege on a table to another user must have the GRANT and SELECT
   privileges on that table.

Supported privileges

   Roles and users can be granted the following privileges. Some privileges
   are applicable both for databases and tables, while other are applicable
   only for tables (see Levels in the table below).

     * When a role or user is granted privileges for a database, new tables
       created in the database will inherit the privileges, but the
       privileges can then be changed.

       Note:

       The user does not get privileges to existing tables in the database.
       To grant privileges to a user on all existing tables in a database,
       see Grant privileges on all tables in a database

     * When a role or user is granted privileges for a table, the privileges
       are limited to the table.

     * The root user automatically belongs to the admin role and has the ALL
       privilege for new databases.

     * For privileges required by specific statements, see the documentation
       for the respective SQL statement.

   Privilege  Levels          
   ALL        Database, Table 
   CREATE     Database, Table 
   DROP       Database, Table 
   GRANT      Database, Table 
   SELECT     Table           
   INSERT     Table           
   DELETE     Table           
   UPDATE     Table           
   ZONECONFIG Database, Table 

Parameters

   Parameter     Description                                                  
                 A comma-separated list of table names. Alternately, to grant 
   table_name    privileges to all tables, use *. ON TABLE table.* grants     
                 apply to all existing tables in a database but will not      
                 affect tables created after the grant.                       
                 A comma-separated list of database names.                    
                                                                              
   database_name Privileges granted on databases will be inherited by any new 
                 tables created in the databases, but do not affect existing  
                 tables in the database.                                      
   user_name     A comma-separated list of users and/or roles to whom you     
                 want to grant privileges.                                    

Examples

  Grant privileges on databases

   copy

 > GRANT CREATE ON DATABASE db1, db2 TO maxroach, betsyroach;

   copy

 > SHOW GRANTS ON DATABASE db1, db2;

 +----------+------------+------------+
 | Database |    User    | Privileges |
 +----------+------------+------------+
 | db1      | betsyroach | CREATE     |
 | db1      | maxroach   | CREATE     |
 | db1      | root       | ALL        |
 | db2      | betsyroach | CREATE     |
 | db2      | maxroach   | CREATE     |
 | db2      | root       | ALL        |
 +----------+------------+------------+
 (6 rows)

  Grant privileges on specific tables in a database

   copy

 > GRANT DELETE ON TABLE db1.t1, db1.t2 TO betsyroach;

   copy

 > SHOW GRANTS ON TABLE db1.t1, db1.t2;

 +-------+------------+------------+
 | Table |    User    | Privileges |
 +-------+------------+------------+
 | t1    | betsyroach | DELETE     |
 | t1    | root       | ALL        |
 | t2    | betsyroach | DELETE     |
 | t2    | root       | ALL        |
 +-------+------------+------------+
 (4 rows)

  Grant privileges on all tables in a database

   copy

 > GRANT SELECT ON TABLE db2.* TO henryroach;

   copy

 > SHOW GRANTS ON TABLE db2.*;

 +-------+------------+------------+
 | Table |    User    | Privileges |
 +-------+------------+------------+
 | t1    | henryroach | SELECT     |
 | t1    | root       | ALL        |
 | t2    | henryroach | SELECT     |
 | t2    | root       | ALL        |
 +-------+------------+------------+
 (4 rows)

  Make a table readable to every user in the system

   copy

 > GRANT SELECT ON TABLE myTable TO public;

   copy

 > SHOW GRANTS ON TABLE myTable;

   database_name | schema_name | table_name | grantee | privilege_type
 +---------------+-------------+------------+---------+----------------+
   defaultdb     | public      | mytable    | admin   | ALL
   defaultdb     | public      | mytable    | public  | SELECT
   defaultdb     | public      | mytable    | root    | ALL
 (3 rows)

  Grant the privilege to manage the replication zones for a database or table

   copy

 > GRANT ZONECONFIG ON TABLE mytable TO myuser;

   The user myuser can then use the CONFIGURE ZONE statement to to add,
   modify, reset, or remove replication zones for the table mytable.

See also

     * Authorization
     * REVOKE <roles>
     * GRANT <roles>
     * REVOKE <privileges>
     * SHOW GRANTS
     * SHOW ROLES
     * CONFIGURE ZONE
     * Manage Users

   Was this page helpful?

   Yes No
     * Product
          * CockroachDB
          * CockroachCloud
          * Compare
          * Pricing
          * What's New
          * Get CockroachDB
          * Sign In
     * Resources
          * Guides
          * Videos & Webinars
          * Architecture Overview
          * FAQ
          * Security
     * Learn
          * Docs
          * University
     * Support Channels
          * Forum
          * Slack
          * Support Portal
          * Contact Us
     * Company
          * About
          * Blog
          * Careers
          * Customers
          * Events
          * News
          * Privacy
   Â© 2020 Cockroach Labs
   Thank you for downloading CockroachDB
   Keep up-to-date with CockroachDB software releases and usage best
   practices
   Keep up-to-date with CockroachDB software releases and usage best
   practices
